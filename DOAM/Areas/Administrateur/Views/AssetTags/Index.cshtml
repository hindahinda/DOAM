@model PagedList.IPagedList<MyApp.Application.ViewModels.AssetTagViewModel>
@using PagedList.Mvc;

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Index";
       //Layout = "~/Views/Shared/_Layout.cshtml";
       Layout = "~/Views/Shared/Layout_AreaAdmin.cshtml";
}
   
 <div class="site-section bg-light table-responsive-sm" >
     <div class="container">

         <h2>Index</h2>

         <p>
             @Html.ActionLink("Create New", "Create")
         </p>
         @using (Html.BeginForm())
         {
             <p>
                 Find by name: @Html.TextBox("SearchString", ViewBag.searchString as string)
                 <input type="submit" value="Search" />
             </p>
         }
         <table class="table table-dark table-striped">
             <tr>
                 <th>
                     @*@Html.DisplayNameFor(model => model.AssetName)*@

                     @Html.ActionLink("AssetName", "Index", new { sortOrder = ViewBag.NameSortParm, searchString = ViewBag.searchString })

                 </th>
                 <th>
                     @*@Html.DisplayNameFor(model => model.TagLabel)*@

                     @Html.ActionLink("TagLabel", "Index", new { sortOrder = ViewBag.LabelSortParm, searchString = ViewBag.searchString })

                 </th>
                 <th></th>
             </tr>

             @foreach (var item in Model)
             {
                 <tr>
                     <td>
                         @Html.DisplayFor(modelItem => item.AssetName)
                     </td>
                     <td>
                         @Html.DisplayFor(modelItem => item.TagLabel)
                     </td>
                     <td>
                         @Html.ActionLink("Edit", "Edit", new { id = item.AssetTagID }) |
                         @Html.ActionLink("Details", "Details", new { id = item.AssetTagID }) |
                         @Html.ActionLink("Delete", "Delete", new { id = item.AssetTagID })
                     </td>
                 </tr>
             }

         </table>
         <br />

         Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount)

         @Html.PagedListPager(Model, page => Url.Action("Index",

          new { page, sortOrder = ViewBag.CurrentSort, searchString = ViewBag.searchString }))
     </div></div>