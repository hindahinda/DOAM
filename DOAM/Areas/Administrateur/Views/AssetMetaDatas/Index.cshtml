@model PagedList.IPagedList<MyApp.Application.ViewModels.AssetMetaDataViewModel> 
@using PagedList.Mvc;

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Index";
      
       Layout = "~/Views/Shared/Layout_AreaAdmin.cshtml";
}

    <div class="site-section bg-light table-responsive-sm" >
        <div class="container">
            <h2>Index</h2>

            <p>
                @Html.ActionLink("Create New", "Create")
            </p>
            @using (Html.BeginForm())
            {
                <p>
                    Find by name: @Html.TextBox("SearchString", ViewBag.searchString as string)
                    <input type="submit" value="Search" />
                </p>
            }
            <table class="table table-dark table-striped">
                <tr>

                    <th>
                        Name
                        @*@Html.DisplayNameFor(model => model.Asset.Name)*@
                    </th>
                    <th>
                        Title
                        @*@Html.DisplayNameFor(model => model.MetaData.Title)*@
                    </th>
                    <th>

                        @Html.ActionLink("Value", "Index", new { sortOrder = ViewBag.NameSortParm, searchString = ViewBag.searchString })

                    </th>
                    <th></th>
                </tr>

                @foreach (var item in Model)
                {
                    <tr>

                        <td>
                            @Html.DisplayFor(modelItem => item.NameAsset) 
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.MetaDataTitle) 
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Value)
                        </td>
                        <td>
                            @Html.ActionLink("Edit", "Edit", new { id = item.AssetMetaDataID }) |
                            @Html.ActionLink("Details", "Details", new { id = item.AssetMetaDataID }) |
                            @Html.ActionLink("Delete", "Delete", new { id = item.AssetMetaDataID })
                        </td>
                    </tr>
                }

            </table>
        <br />
            Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount)

            @Html.PagedListPager(Model, page => Url.Action("Index",

             new { page, sortOrder = ViewBag.CurrentSort, searchString = ViewBag.searchString }))
        </div></div>